
Type of token to match:
-----------------------

 '-w' will match non word charactors:

   $ echo 'abc @# xyx' | grep -ow '@#'
   @#

 '\b' will not match non word charactors:

   $ echo 'abc @# xyx' | grep -o '\b@#\b'
   <no match>

 Non word charactors = [a-z][A-Z][0-9][_]


How does '\b' work?
--------------------

  Consider the string:

    "I have 12, he has 2!"

  '\b' sees the above string like this:

    |I| |have| |12|, |he| |has| |2|!
       ^      ^     ^    ^     ^      spaces

  Where the '|' is the anchor position '\b'.
  Note that '!' does not have end of word boundary as it is not
  a word character.

  "\b..\b" will match:

    |I| |have| |12|, |he| |has| |2|!
    ^^^^^
    b. .b

    |I| |have| |12|, |he| |has| |2|!
               ^^^^
               b..b

    |I| |have| |12|, |he| |has| |2|!
                  ^^^^
                  b..b

    |I| |have| |12|, |he| |has| |2|!
                     ^^^^
                     b..b


    |I| |have| |12|, |he| |has| |2|!
                              ^^^^^
                              b. .b

    $ echo 'I have 12, he has 2!' | grep -o '\b..\b'
    I
    12
    ,
    he
     2
    # 1st and 3rd line have space as second character



  Note 1:
  -------
  Word boundary has a start and end; but with \b you don't have
  to mark both in your pattern. \b can denote either only the
  start or the end of word without its corresponding boundary.

    Start of word means either the character prior to the word is
    a non-word character or there is no character (start of line):

      Start of word: #|w OR ^|w
      (legend: # = non word char; w = word char; | = \b )

    End of word means the character after the word is a non-word
    character or no character (end of line):

      End of word: w|#  OR #|$

  This implies for a word boundary to exist you need at lease one
  word character.

  The use case of single \b is to match words starting with or
  end with a pattern:

    $ grep '\bpar'   # match words starting with 'par'
    $ grep 'par\b'   # match words ending with 'par'



  Note 2:
  -------
  The negation of /b is /B

    $ grep '\Bpar\B'   # match 'par' if it is surrounded by word
                       # characters.

    $ grep '\Bpar'     # match 'par' but not as start of word.
    $ grep 'par\B'     # match 'par' but not as end of word.





eof---
