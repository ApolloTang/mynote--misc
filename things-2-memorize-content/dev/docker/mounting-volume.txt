Bind mount
==========

  In bind mount, we use a host file system and mount it on the container
  with run command's -v flag:

    $ docker run -it \
      -v /Users/apollotang/Desktop/:/desktop \
      apollotang/date_project:1.0

      The above will run the image "apollotang/date_project:1.0" and
      mount host's file system with path "/Users/apollotang/Desktop/"
      to internal folder "/desktop".
      Note there is no need to use the command 'bash'.


    $ docker run -it \
      -v /Users/apollotang/Desktop/:/desktop:ro \
      apollotang/date_project:1.0

      The "ro" flag mount the volume as readonly


Volume
=======

  Docker volumes are created to share data within different
  containers, rather than sharing data with host and container.

    $ docker volume create project_directory

  To inspect property of a created volume:

    $ docker volume inspect project_directory
      [
          {
              "CreatedAt": "2020-09-14T05:10:22Z",
              "Driver": "local",
              "Labels": {},
              "Mountpoint": "/var/lib/docker/volumes/project_directory/_data",
              "Name": "project_directory",
              "Options": {},
              "Scope": "local"
          }
      ]

  [Tip] You can get the "Mount" field of the inspect object with [1]:

    $ docker inspect -f '{{ .Mounts }}' <container>


  To run a container using this volume:

    $ docker run -it -v project_directory:/project apollotang/date_project:1.0
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^
                                     host:container

  ---

  [Note] You can see the mount point, however you cannot access it directly:

    $ cd /var/lib/docker/volumes/project_directory
    -bash: cd: /var/lib/docker/volumes/project_directory: No such file or directory

  That is because it is located inside the vm that docker instantiates
  to provide the necessary Linux environment. These vm are located at the
  following location [2]:

    ~/Library/Containers/com.docker.docker/Data/vms/0

  ---

  To remove volume you use:

    docker volume rm $(docker volume ls -q)


----
Ref:
[1] https://stackoverflow.com/questions/30133664/how-do-you-list-volumes-in-docker-containers/41975069
[2] https://stackoverflow.com/questions/38532483/where-is-var-lib-docker-on-mac-os-x

---eof---
