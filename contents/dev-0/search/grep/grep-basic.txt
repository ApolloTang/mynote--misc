
  grep '<pattern>' <filename>
  grep -F '<string>' <filename>


Output Control
==============

 -H        • Show filename prefix on each match.
           • When there are multiple files this flag is on by default.
           • Useful when using with en editor to open the files with matches.
             $ vim -q <(grep -Hn '<pattern>' *)
           • Negation of -h.

 -h        • Supress file name prefix on each match.
           • Negation of -H.

 -mX       • Limit output to X match.

 -n        • Print the line number on each match.

 -l        • Print only names of file contain matches (match line will not print).
           • Negation of -L.

 -L        • Print only names of files contain no matches (matched line will not print).
           • Negation of -l.

 --color   • --color=always
               Highlight result with color.
               Use this with pipe or redirect to preserve color.
               Use this with less to persist color in output.
           • --color=never
               Never highlight result with color.
           • --color=auto
               When output is direct to another command, color is lost.


Regex Control
=============

 -e        • Specify a PATTERN.
           • With multiple "-e" the effect is same as alternation, eg:
               $ printf 'I like cats\nI like dogs' | grep 'cat\|dog'
             is same as:
               $ printf 'I like cats\nI like dogs' | grep -e 'cat' -e 'dog'

 -G        • Use Basic Regular Expression (BRE). This is the default
             when neither -G nor -E is specified.

 -E        • Use Extended Regular Expression (ERE).

 -P        • Use Perl Regular Expression (ERE).

 -F        • Turn off Regex, PATTERN is a set of newline-separated strings.

 -i        • Ignore case.

 -w        • Force PATTERN to match only whole words.
             - "grep -w 'word'" will only match "word" not "words"
             - Be careful, -w is not the same as \b (see bre-word-anchor.txt )

 -x        • Force PATTERN to match only whole line.
             - "grep -x 'word'" will only match line that contains only "word",
               it will not match the line "  word   " b/c in addition to 'word',
               this line contains other charectors (the spaces before and after 'word').
             - This is similar to "grep '^word$'.
             - Cannot use "grep -x ''" to match empty line, it does not work.



------




