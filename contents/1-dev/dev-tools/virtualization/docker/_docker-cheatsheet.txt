
docker build -t image_name:1.0 .  # Create an image as describe in ./Dockerfile, called it 'image_name', with tag '1.0'.

docker create  <image-name>       # Creates a writeable container layer over the specified image.
docker run     <image-name>       # = docker create + docker start + docker attach.
docker stop    <container-name>   # Stop and exist all container SAFELY (issues a SIGTERM signal to the process).
docker kill    <container-name>   # Stop and exist all container UNSAFE (issues a SIGKILL signal to the process).
docker restart <container-name>   # Restart a stopped container.

docker run -d -p <host>:<container> --name <container-name> <images-name>

docker rm $(docker ps -aq -f status=exited)  # rm all exited containers.
docker rm $(docker stop $(docker ps -q))     # rm all running containers.
docker rm $(docker ps -aq)                   # rm all containers (if all container has already stopped).
docker rm -f $(docker ps -aq)                # rm all containers (even if some container is still running).



docker pull <IMAGE:TAG>             # download the specified image from Docker registry
docker images                       # lists the Docker images on your system.
docker rmi <IMAGE>                  # remove the specified image.
docker rmi -f $(docker images -q)   # remove all images.
docker tag OldName:tag NewName:tag  # renaming images


docker-compose -f my-docker-compose.yml down
docker volume rm $(docker volume ls -q)
docker-compose -f my-docker-compose.yml down -v

docker-compose -p my-app -f my-docker-compose.yml up
docker-compose -p my-app -f my-docker-compose.yml down

docker ps -a

docker system prune

